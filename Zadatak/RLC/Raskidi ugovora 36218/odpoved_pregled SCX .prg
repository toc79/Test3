*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ˇˇATENCIÓN!! - ˇˇNO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="odpoved_pregled.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\..\common\includes\locs.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	Name = "Dataenvironment"

ENDDEFINE

DEFINE CLASS frmodpoved_pregled AS gform_pregled OF "..\..\common\classes\gkclass.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cnt_Header.txtId_pog" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cnt_Header.txtId_kupca" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cnt_Header.txtNacin_leas" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cnt_Header.txtPred_naj" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cnt_Header.lblPogodba" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cnt_Header.lblPartner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cnt_Header.txtNaz_kr_kup" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: generate_xml
		*p: calc_debt		&& Ali se izračuna dolg. Pomembno je pri izdaji odpovedi, ker nam pove ali se je pred tem izračunal dolg.
		*p: datum_dolg_na_dan		&& datum dolg na dan je datum izračuna dolga, ne sme biti večji od datuma izdaje odpovedi
	*</DefinedPropArrayMethod>

	cursorname_detail = odpoved
	DoCreate = .T.
	Height = 500
	Left = 0
	Name = "frmOdpoved_pregled"
	permission = SpecialServicesContractCancellationView
	Top = 0
	Width = 848
	WindowState = 1
	BGridResult.Name = "BGridResult"
	cnt_criteria.cmdRun.Name = "cmdRun"
	cnt_criteria.Name = "cnt_criteria"
	cnt_criteria.shpBorder.Name = "shpBorder"
	cnt_Header.Height = 55
	cnt_Header.Left = 9
	cnt_Header.Name = "cnt_Header"
	cnt_Header.shpBorder.Name = "shpBorder"
	cnt_Header.Top = 360
	cnt_Header.Width = 729
	tbractions.btnAdditionalRoutines.Left = 455
	tbractions.btnAdditionalRoutines.Name = "btnAdditionalRoutines"
	tbractions.btnAdditionalRoutines.Top = 5
	tbractions.btnAverage.Left = 505
	tbractions.btnAverage.Name = "btnAverage"
	tbractions.btnAverage.SpecialEffect = 2
	tbractions.btnAverage.TabIndex = 23
	tbractions.btnAverage.Top = 5
	tbractions.btnBrisi.Left = 180
	tbractions.btnBrisi.Name = "btnBrisi"
	tbractions.btnBrisi.SpecialEffect = 2
	tbractions.btnBrisi.TabIndex = 8
	tbractions.btnBrisi.Top = 5
	tbractions.btnDeselectAll.Enabled = .T.
	tbractions.btnDeselectAll.Left = 555
	tbractions.btnDeselectAll.Name = "btnDeselectAll"
	tbractions.btnDeselectAll.Top = 5
	tbractions.btnDeselectAll.Visible = .T.
	tbractions.btnDodaj.Left = 105
	tbractions.btnDodaj.Name = "btnDodaj"
	tbractions.btnDodaj.SpecialEffect = 2
	tbractions.btnDodaj.TabIndex = 5
	tbractions.btnDodaj.Top = 5
	tbractions.btnHelp.Left = 355
	tbractions.btnHelp.Name = "btnHelp"
	tbractions.btnHelp.SpecialEffect = 2
	tbractions.btnHelp.TabIndex = 31
	tbractions.btnHelp.Top = 5
	tbractions.btnIzhod.Left = 380
	tbractions.btnIzhod.Name = "btnIzhod"
	tbractions.btnIzhod.SpecialEffect = 2
	tbractions.btnIzhod.TabIndex = 32
	tbractions.btnIzhod.Top = 5
	tbractions.btnLegenda.Left = 705
	tbractions.btnLegenda.Name = "btnLegenda"
	tbractions.btnLegenda.SpecialEffect = 2
	tbractions.btnLegenda.TabIndex = 33
	tbractions.btnLegenda.Top = 5
	tbractions.btnNaprej.Left = 55
	tbractions.btnNaprej.Name = "btnNaprej"
	tbractions.btnNaprej.SpecialEffect = 2
	tbractions.btnNaprej.TabIndex = 3
	tbractions.btnNaprej.Top = 5
	tbractions.btnNazaj.Left = 30
	tbractions.btnNazaj.Name = "btnNazaj"
	tbractions.btnNazaj.SpecialEffect = 2
	tbractions.btnNazaj.TabIndex = 2
	tbractions.btnNazaj.Top = 5
	tbractions.btnOdprteTabele.Left = 330
	tbractions.btnOdprteTabele.Name = "btnOdprteTabele"
	tbractions.btnOdprteTabele.SpecialEffect = 2
	tbractions.btnOdprteTabele.TabIndex = 21
	tbractions.btnOdprteTabele.Top = 5
	tbractions.btnPoprava.Left = 155
	tbractions.btnPoprava.Name = "btnPoprava"
	tbractions.btnPoprava.SpecialEffect = 2
	tbractions.btnPoprava.TabIndex = 7
	tbractions.btnPoprava.Top = 5
	tbractions.btnPregled.Left = 130
	tbractions.btnPregled.Name = "btnPregled"
	tbractions.btnPregled.SpecialEffect = 2
	tbractions.btnPregled.TabIndex = 6
	tbractions.btnPregled.Top = 5
	tbractions.btnPrvi.Left = 5
	tbractions.btnPrvi.Name = "btnPrvi"
	tbractions.btnPrvi.SpecialEffect = 2
	tbractions.btnPrvi.TabIndex = 1
	tbractions.btnPrvi.Top = 5
	tbractions.btnSelectAll.Enabled = .T.
	tbractions.btnSelectAll.Left = 530
	tbractions.btnSelectAll.Name = "btnSelectAll"
	tbractions.btnSelectAll.Top = 5
	tbractions.btnSelectAll.Visible = .T.
	tbractions.btnSelekcija.Left = 230
	tbractions.btnSelekcija.Name = "btnSelekcija"
	tbractions.btnSelekcija.SpecialEffect = 2
	tbractions.btnSelekcija.TabIndex = 15
	tbractions.btnSelekcija.Top = 5
	tbractions.btnSelekcijaClear.Left = 430
	tbractions.btnSelekcijaClear.Name = "btnSelekcijaClear"
	tbractions.btnSelekcijaClear.Top = 5
	tbractions.btnShrani.Left = 205
	tbractions.btnShrani.Name = "btnShrani"
	tbractions.btnShrani.SpecialEffect = 2
	tbractions.btnShrani.TabIndex = 13
	tbractions.btnShrani.Top = 5
	tbractions.btnSortiranje.Left = 280
	tbractions.btnSortiranje.Name = "btnSortiranje"
	tbractions.btnSortiranje.SpecialEffect = 2
	tbractions.btnSortiranje.TabIndex = 16
	tbractions.btnSortiranje.Top = 5
	tbractions.btnTiskanje.Left = 255
	tbractions.btnTiskanje.Name = "btnTiskanje"
	tbractions.btnTiskanje.SpecialEffect = 2
	tbractions.btnTiskanje.TabIndex = 17
	tbractions.btnTiskanje.Top = 5
	tbractions.btnToolTip.Left = 405
	tbractions.btnToolTip.Name = "btnToolTip"
	tbractions.btnToolTip.SpecialEffect = 2
	tbractions.btnToolTip.TabIndex = 22
	tbractions.btnToolTip.Top = 5
	tbractions.btnTotal.Left = 305
	tbractions.btnTotal.Name = "btnTotal"
	tbractions.btnTotal.SpecialEffect = 2
	tbractions.btnTotal.TabIndex = 20
	tbractions.btnTotal.Top = 5
	tbractions.btnZadnji.Left = 80
	tbractions.btnZadnji.Name = "btnZadnji"
	tbractions.btnZadnji.SpecialEffect = 2
	tbractions.btnZadnji.TabIndex = 4
	tbractions.btnZadnji.Top = 5
	tbractions.ButtonCount = 32
	tbractions.cmdClear.Left = 630
	tbractions.cmdClear.Name = "cmdClear"
	tbractions.cmdClear.SpecialEffect = 2
	tbractions.cmdClear.TabIndex = 28
	tbractions.cmdClear.Top = 5
	tbractions.cmdOpenContract.Left = 680
	tbractions.cmdOpenContract.Name = "cmdOpenContract"
	tbractions.cmdOpenContract.SpecialEffect = 2
	tbractions.cmdOpenContract.TabIndex = 30
	tbractions.cmdOpenContract.Top = 5
	tbractions.cmdOpenCustomer.Left = 655
	tbractions.cmdOpenCustomer.Name = "cmdOpenCustomer"
	tbractions.cmdOpenCustomer.SpecialEffect = 2
	tbractions.cmdOpenCustomer.TabIndex = 29
	tbractions.cmdOpenCustomer.Top = 5
	tbractions.cmdRefresh.Left = 480
	tbractions.cmdRefresh.Name = "cmdRefresh"
	tbractions.cmdRefresh.SpecialEffect = 2
	tbractions.cmdRefresh.TabIndex = 14
	tbractions.cmdRefresh.Top = 5
	tbractions.cmdResize.Left = 580
	tbractions.cmdResize.Name = "cmdResize"
	tbractions.cmdResize.SpecialEffect = 2
	tbractions.cmdResize.TabIndex = 25
	tbractions.cmdResize.Top = 5
	tbractions.cmdRun.Left = 605
	tbractions.cmdRun.Name = "cmdRun"
	tbractions.cmdRun.SpecialEffect = 2
	tbractions.cmdRun.TabIndex = 26
	tbractions.cmdRun.Top = 5
	tbractions.Command30.Caption = ""
	tbractions.Command30.Height = 25
	tbractions.Command30.Left = 730
	tbractions.Command30.Name = "cmdIssueCancellation"
	tbractions.Command30.Picture = ..\..\common\bmps\checkon.bmp
	tbractions.Command30.SpecialEffect = 2
	tbractions.Command30.TabIndex = 12
	tbractions.Command30.ToolTipText = "Izdaj odpoved"
	tbractions.Command30.Top = 5
	tbractions.Command30.Width = 25
	tbractions.Command31.Caption = ""
	tbractions.Command31.Height = 25
	tbractions.Command31.Left = 755
	tbractions.Command31.Name = "cmdCancelCancellation"
	tbractions.Command31.Picture = ..\..\common\bmps\checkoff.bmp
	tbractions.Command31.SpecialEffect = 2
	tbractions.Command31.TabIndex = 13
	tbractions.Command31.ToolTipText = "Prekliči odpoved"
	tbractions.Command31.Top = 5
	tbractions.Command31.Width = 25
	tbractions.Command32.Caption = ""
	tbractions.Command32.Height = 25
	tbractions.Command32.Left = 780
	tbractions.Command32.Name = "cmdCalcDebt"
	tbractions.Command32.Picture = ..\..\common\bmps\suma_red.bmp
	tbractions.Command32.SpecialEffect = 2
	tbractions.Command32.TabIndex = 11
	tbractions.Command32.ToolTipText = "Izračun dolga"
	tbractions.Command32.Top = 5
	tbractions.Command32.Width = 25
	tbractions.Height = 34
	tbractions.Left = 0
	tbractions.main_table = Thisform.cursorname_detail
	tbractions.Name = "tbractions"
	tbractions.pkey = id_odpoved
	tbractions.Top = 0
	tbractions.Width = 817
	tmrClick.Name = "tmrClick"

	ADD OBJECT 'cnt_Header.lblPartner' AS blabel WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Partner", ;
		Height = 17, ;
		Left = 5, ;
		Name = "lblPartner", ;
		Top = 31, ;
		Width = 85
		*< END OBJECT: ClassLib="..\..\common\classes\vclas1.vcx" BaseClass="label" />

	ADD OBJECT 'cnt_Header.lblPogodba' AS blabel WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Pogodba", ;
		Height = 17, ;
		Left = 6, ;
		Name = "lblPogodba", ;
		Top = 7, ;
		Width = 85
		*< END OBJECT: ClassLib="..\..\common\classes\vclas1.vcx" BaseClass="label" />

	ADD OBJECT 'cnt_Header.txtId_kupca' AS btextro WITH ;
		ControlSource = "", ;
		Height = 19, ;
		Left = 93, ;
		Name = "txtId_kupca", ;
		TabIndex = 9, ;
		Top = 29, ;
		Width = 61, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\..\common\classes\vclas1.vcx" BaseClass="textbox" />

	ADD OBJECT 'cnt_Header.txtId_pog' AS btextro WITH ;
		ControlSource = "", ;
		Height = 19, ;
		Left = 93, ;
		Name = "txtId_pog", ;
		TabIndex = 9, ;
		Top = 5, ;
		Width = 94, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\..\common\classes\vclas1.vcx" BaseClass="textbox" />

	ADD OBJECT 'cnt_Header.txtNacin_leas' AS btextro WITH ;
		Alignment = 3, ;
		ControlSource = "", ;
		Height = 19, ;
		Left = 192, ;
		Name = "txtNacin_leas", ;
		TabIndex = 10, ;
		Top = 5, ;
		Width = 30, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\..\common\classes\vclas1.vcx" BaseClass="textbox" />

	ADD OBJECT 'cnt_Header.txtNaz_kr_kup' AS btextro WITH ;
		Alignment = 3, ;
		ControlSource = "", ;
		Height = 19, ;
		Left = 159, ;
		Name = "txtNaz_kr_kup", ;
		TabIndex = 47, ;
		Top = 29, ;
		Width = 361, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\..\common\classes\vclas1.vcx" BaseClass="textbox" />

	ADD OBJECT 'cnt_Header.txtPred_naj' AS btextro WITH ;
		Alignment = 3, ;
		ControlSource = "", ;
		Height = 19, ;
		Left = 225, ;
		Name = "txtPred_naj", ;
		TabIndex = 47, ;
		Top = 5, ;
		Width = 361, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\..\common\classes\vclas1.vcx" BaseClass="textbox" />
	
	PROCEDURE generate_xml
		LPARAMETERS tdDatum, tcUser, tdRok, tcOpis_dog, tcToDo, tlChangeStatus, tnOdp_opom_dni, tcXml, tcType, tdDatmDogodka 
		 
		LOCAL  lcId_kupca, lcKont, lcTel, lcGSM, lnDolgDatD, lcXml, lcS, lcS4
		lcXml = ""
		lcS = SPACE(2)
		lcS4 = SPACE(4)
		
		LOCAL lcParams
		lcParams = "<parameters>"
		lcParams = lcParams + GF_CreateNode("tdDatum", tdDatum, "D", 1) + gcE
		lcParams = lcParams + GF_CreateNode("tcUser", tcUser, "C", 1) + gcE
		lcParams = lcParams + GF_CreateNode("tdRok", tdRok, "D", 1) + gcE
		lcParams = lcParams + GF_CreateNode("tcOpis_dog", tcOpis_dog, "C", 1) + gcE
		lcParams = lcParams + GF_CreateNode("tcToDo", tcToDo, "C", 1) + gcE
		lcParams = lcParams + GF_CreateNode("tlChangeStatus", tlChangeStatus, "L", 1) + gcE
		lcParams = lcParams + GF_CreateNode("tnOdp_opom_dni", tnOdp_opom_dni, "N", 1) + gcE
		lcParams = lcParams + GF_CreateNode("tcXml", tcXml, "C", 1) + gcE
		lcParams = lcParams + GF_CreateNode("tcType", tcType, "C", 1) + gcE
		lcParams = lcParams + "</parameters>"
		
		** Externa funkcija mora vrniti XML
		lcXml = GF_EXT_FUNC("IssueCancelation_GenerateXml", lcParams)
		IF TYPE("lcXml") = "C" AND !EMPTY(lcXml) THEN 
			RETURN lcXml 
		ENDIF 
		
		SELECT odpoved
		
		lcId_kupca = GF_LookUp("pogodba.id_kupca", odpoved.id_cont, "pogodba.id_cont")
		GF_SQLEXEC("SELECT id_kupca, naz_kr_kup, telefon, gsm, kontakt, vr_osebe FROM dbo.partner WHERE id_kupca = '" + lcId_kupca + "'" , "_partner") 
		lcKont = IIF(odpoved.vr_osebe = "PO", _partner.kontakt, _partner.naz_kr_kup)
		lcKont = IIF(EMPTY(ALLTRIM(odpoved.kontakt)), lcKont, odpoved.kontakt)
		lcTel = _partner.telefon
		lcGSM = _partner.gsm
		IF USED("_partner")
			USE IN _partner
		ENDIF
		
		lnDolgDatD = GF_Xchange('000', odpoved.debit_val, odpoved.id_tec, DATE())
		
		lcXml = tcXml
		lcXml = lcXml + "<issue_cancellation>" + gcE + lcS
		lcXml = lcXml + GF_CreateNode("id_odpoved", odpoved.id_odpoved, "I", 1) + gcE + lcS
		lcXml = lcXml + GF_CreateNode("action", tcType, "C", 1) + gcE + lcS
		
		* 3. Insert a record to table SS_DOGODEK (tnOdp_opom_dni > 0)
		IF tnOdp_opom_dni > 0 THEN
			lcXml = lcXml + "<ss_dogodek>" + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("id_dog", 0, "I", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("id_cont", odpoved.id_cont, "I", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("id_kupca", lcId_kupca, "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("dat_vnosa", tdDatum, "D", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("vnesel", tcUser, "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("rok", tdRok, "D", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("opis_dog", tcOpis_dog, "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("to_do", tcToDo, "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("kont_oseba", lcKont, "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("tel_ko", lcTel, "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("obdeluje", tcUser, "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("zakljucil", "", "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("opombe", "", "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("detektiv", .F., "L", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("odvzem", .F., "L", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("skladisce", "", "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("prodano", .F., "L", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("pris_porav", .F., "L", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("stecaj", .F., "L", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("odvetnik", .F., "L", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("tozba", .F., "L", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("odpis_terj", .F., "L", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("id_tip_dog", "SG", "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("ukraden", .F., "L", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("dolg_dat_d", lnDolgDatD, "N", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("dat_dolg", odpoved.dat_dolg_na_dan, "D", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("plac_dogov", 0, "N", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("gsm_ko", lcGSM, "C", 1) + gcE + lcS4
			lcXml = lcXml + GF_CreateNode("dat_poprave", DATETIME(), "T", 1) + gcE + lcS
			lcXml = lcXml + GF_CreateNode("datum_dogodka", tdDatmDogodka, "T", 1) + gcE + lcS
			lcXml = lcXml + "</ss_dogodek>" + gcE + lcS
		ENDIF
		lcXml = lcXml + GF_CreateNode("change_contract_status", IIF(tlChangeStatus, .T., .F.), "L", 1) + gcE
		
		lcXml = lcXml + "</issue_cancellation>" + gcE
		
		RETURN lcXml 
		
		
	ENDPROC

	PROCEDURE set_controls
		DODEFAULT()
		
		WITH Thisform
			.bgridResult.Columns(1).CheckWritable1.property_when = "!odpoved.izdana"
		ENDWITH
		
	ENDPROC

	PROCEDURE updatepanel
		LOCAL lcCursor
		
		WITH Thisform
			lcCursor = .CursorName_Detail
			IF USED(lcCursor) THEN
				.cnt_Header.txtId_pog.Value = &lcCursor..id_pog
				.cnt_Header.txtNacin_leas.Value = &lcCursor..nacin_leas
				.cnt_Header.txtPred_naj.Value = &lcCursor..pred_naj
				.cnt_Header.txtId_kupca.Value = &lcCursor..id_kupca
				.cnt_Header.txtNaz_kr_kup.Value = &lcCursor..naz_kr_kup
			ELSE 
				.cnt_Header.txtId_pog.Value = ""
				.cnt_Header.txtNacin_leas.Value = ""
				.cnt_Header.txtPred_naj.Value = ""
				.cnt_Header.txtId_kupca.Value = ""
				.cnt_Header.txtNaz_kr_kup.Value = ""
			ENDIF
		ENDWITH
		Thisform.cnt_Header.Refresh
		Thisform.Set_controls()
	ENDPROC

	PROCEDURE BGridResult.AfterRowColChange
		LPARAMETERS nColIndex
		
		Thisform.UpdatePanel
	ENDPROC

	PROCEDURE BGridResult.Init
		LPARAMETERS tlNoInit
		DODEFAULT(tlNoInit)
		
		Thisform.BGridResult.SetAll("DynamicBackColor", "IIF(odpoved.preklicana, RGB(255,230,230), IIF(odpoved.izdana, RGB(200,255,200), IIF(GF_NULLOREMPTY(odpoved.dat_dolg_na_dan) , RGB(255,255,176), RGB(255,255,255))))" , "Column")
		
	ENDPROC

	PROCEDURE tbractions.btnBrisi.Click
		#INCLUDE ..\..\common\includes\locs.h
		LOCAL lcIdOdpoved, lcXml, lcSpc
		
		IF GOBJ_Permissions.GetPermission("SpecialServicesContractCancellationDelete") < 2 THEN
			pozor(STRTRAN(PERMISSION_DENIED, "{0}", "SpecialServicesContractCancellationDelete"))
			RETURN .F.
		ENDIF
		
		IF RECCOUNT("odpoved") < 1 THEN
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		lnPosition = RECNO("odpoved")
		SELECT odpoved
		COUNT FOR oznacen = .T. TO lnCount
		IF lnPosition > lnCount AND lnCount != 0
			lnPosition = lnCount
		ENDIF
		
		GO lnPosition IN odpoved
			
		
		IF odpoved.izdana AND lnCount = 0 THEN
			pozor("Odpoved je že bila izdana!")
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		IF lnCount = 0 THEN
			GO lnPosition IN odpoved
			REPLACE odpoved.oznacen WITH .T. IN odpoved
			lcCaption = "Ali želite izbrisati zapis?" && caption
			lcCaption = lcCaption + SPACE(1) + "(" + ALLTRIM(STR(odpoved.id_odpoved)) + ")?"
		ELSE
			lcCaption = "Ali želite izbrisati označene zapise?" && caption
		ENDIF
		
		IF !potrjeno(lcCaption) THEN
			REPLACE odpoved.oznacen WITH .F. IN odpoved
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		lcXml = "<issue_cancellation_delete xmlns='urn:gmi:nova:leasing'>" + gcE
		SCAN FOR odpoved.oznacen = .T.
			lcXml = lcXml + GF_CreateNode("id_odpoved", odpoved.id_odpoved, "N", 1) + gcE
		ENDSCAN
		lcXml = lcXml + "</issue_cancellation_delete>"
		
		IF !GF_ProcessXml(lcXml, .T.) THEN
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		IF(lnCount = 0) THEN
			obvesti(INFDELETED_LOC)
		ELSE
			obvesti("Zapisi uspešno izbrisani.")
		ENDIF
		
		Thisform.RunSql()
	ENDPROC

	PROCEDURE tbractions.btnDeselectAll.Click
		LOCAL lcCursor
		
		lcCursor = Thisform.CursorName_Detail
		
		IF !USED(lcCursor)
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF   
		
		Thisform.id_field = &lcCursor..id_odpoved
		SELECT (lcCursor)
		REPLACE oznacen WITH .F. ALL
		Thisform.bgridResult.SetFocus
		Thisform.tbrActions.set_grid_position
	ENDPROC

	PROCEDURE tbractions.btnDodaj.Click
		LOCAL lcCursor, lnId_field
		
		lcCursor = Thisform.CursorName_Detail
		
		Thisform.id_field = &lcCursor..id_odpoved
		DO FORM odpoved_maska TO lnId_field
		IF TYPE("lnId_field") = "N" THEN
			Thisform.id_field = lnId_field
			Thisform.RunSql
		ENDIF
		Thisform.bgridResult.SetFocus
	ENDPROC

	PROCEDURE tbractions.btnLegenda.Click
		DO Legend_Odpoved IN legends
	ENDPROC

	PROCEDURE tbractions.btnPoprava.Click
		LOCAL lcCursor, lnId_field
		
		lcCursor = Thisform.CursorName_Detail
		
		Thisform.id_field = &lcCursor..id_odpoved
		DO FORM odpoved_maska WITH &lcCursor..id_odpoved, 2 TO lnId_field
		IF TYPE("lnId_field") = "N" THEN
			Thisform.id_field = lnId_field
			Thisform.RunSql
		ENDIF
		Thisform.bgridResult.SetFocus 
	ENDPROC

	PROCEDURE tbractions.btnPregled.Click
		LOCAL lcCursor
		
		lcCursor = Thisform.CursorName_Detail
		DO FORM odpoved_maska WITH &lcCursor..id_odpoved, 0
	ENDPROC

	PROCEDURE tbractions.btnSelectAll.Click
		LOCAL lcCursor
		
		lcCursor = Thisform.cursorname_detail
		
		IF !USED(lcCursor)
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF  
		
		Thisform.id_field = &lcCursor..id_odpoved
		SELECT (lcCursor)
		GO TOP
		REPLACE oznacen WITH .T. FOR !&lcCursor..izdana
		Thisform.bgridResult.SetFocus
		Thisform.tbrActions.set_grid_position
		
		
	ENDPROC

	PROCEDURE tbractions.cmdCalcDebt.Click
		LOCAL lcXML, lnCount, lcCaption, lcCaption1, lnIdCont, lnIdOdp, lcIdTec, ldDate, lnRecCount 
		
		IF GOBJ_Permissions.GetPermission("SpecialServicesContractCancellationDebtCalculation") < 2 THEN
			pozor(STRTRAN(PERMISSION_DENIED, "{0}", "SpecialServicesContractCancellationDebtCalculation"))
			RETURN .F.
		ENDIF
		
		*dodan property calc_debt - če je izračunan dolg je .T.
		thisform.calc_debt = .F.
		
		IF !USED("odpoved") THEN 
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF 
		
		IF RECCOUNT("odpoved") = 0 THEN
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		
		IF odpoved.preklicana THEN
			pozor("Odpoved je bila že preklicana. Izračun dolga ni smiseln.")
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		IF odpoved.izdana THEN
			pozor("Odpoved je bila že izdana. Izračun dolga ni smiseln.")
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		Thisform.id_field  = odpoved.id_odpoved
		SELECT odpoved
		lnPosition = RECNO("odpoved")
		lnRecCount = RECCOUNT("odpoved")
		IF lnPosition > lnRecCount THEN
			lnPosition = lnRecCount 
		ENDIF
		COUNT FOR oznacen = .T. TO lnCount
		IF lnCount = 1 THEN
			LOCATE FOR oznacen = .T.
			Thisform.id_field  = odpoved.id_odpoved
		ENDIF	
		GO lnPosition IN odpoved
		
		IF INLIST(lnCount, 0, 1)  THEN
			GO lnPosition IN odpoved
			REPLACE odpoved.oznacen WITH .T. IN odpoved
			lcCaption = "Izračunam dolg za to odpoved" && Caption
			lcCaption = lcCaption + SPACE(1) + "(" + ALLTRIM(STR(Thisform.id_field)) + ")?"
		ELSE
			lcCaption = "Ali želite izračunati dolg na izbrani datum za označene odpovedi?" && Caption
		ENDIF
		
		IF !potrjeno(lcCaption) THEN
			REPLACE odpoved.oznacen WITH .F. IN odpoved
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF 
		
		lcXml = "<calculate_debt_issue_cancellation xmlns='urn:gmi:nova:leasing'>" + gcE
		
		* user can insert date of calculation debt
		lcCaption1 = "Vnesite datum izračuna dolga odpovedi na izbrani datum." && caption
		ldDate = DATE() + GObj_Settings.GetVal("dni_odp") 
		
		ldDate = GF_GET_DATE(lcCaption1, ldDate)
		IF ISNULL(ldDate) OR EMPTY(ldDate)
			lcText = "Datum ne sme biti prazen." &&caption
			pozor(lcText)
			RETURN .F.
		ENDIF
		
		thisform.datum_dolg_na_dan = ldDate 
		
		SELECT odpoved
		SCAN FOR odpoved.oznacen = .T.
		
			lnIdCont = odpoved.id_cont
			lcId_cont = ALLTRIM(STR(lnIdCont))
			lnIdOdp = odpoved.id_odpoved
		
			lcSql = "select dbo.gfn_getNewTec(id_tec) from dbo.pogodba where id_cont=" + lcId_cont
			lcIdTec = GF_SQLExecScalar(lcSql) 
			
			lcXml = lcXml + "<calculate_issue_cancellation>" + gcE
			lcXml = lcXml + GF_CreateNode("id_odpoved", lnIdOdp, "N", 1)+ gcE
			lcXml = lcXml + GF_CreateNode("id_cont", lnIdCont, "N", 1)+ gcE
			lcXml = lcXml + GF_CreateNode("calc_date", ldDate, "D", 1)+ gcE
			lcXml = lcXml + GF_CreateNode("id_tec", lcIdTec, "C", 1)+ gcE
			lcXml = lcXml + GF_CreateNode("update_db", .T., "L", 1)+ gcE
			lcXml = lcXml + GF_CreateNode("from_ds", .F. , "L", 1)+ gcE
			lcXml = lcXml + "</calculate_issue_cancellation>"
		
		ENDSCAN
		
		lcXml = lcXml + "</calculate_debt_issue_cancellation >"
		
		IF GF_ProcessXml(lcXml, .T.) THEN
			Obvesti("Dolg je uspešno izračunan!")
			thisform.calc_debt = .T.
		
			** Replace odpoved.dat_dolg_na_dan
			REPLACE dat_dolg_na_dan WITH ldDate FOR oznacen = .T. IN odpoved
			
			thisform.tbrACTIONS.cmdIssueCancellation.Click
		ELSE
			Thisform.bgridResult.SetFocus
			Pozor("Dolg ni izračunan!")
			RETURN .F.
		ENDIF
		
		thisform.calc_debt = .F.
		Thisform.runsql()
		
		
	ENDPROC

	PROCEDURE tbractions.cmdCancelCancellation.Click
		* 1. Mark this record as CancelledContractCancelled (odpoved.preklicana = 1)
		* 2. Ask the user if the contract status field (pogodba.status) also needs
		*    to be changed. It is changed to [select status from dbo.statusi where sif_status = 'BPS']
		* 3. If LOC_NAST.ODP_OPOM_DNI > 0 => insert a reminder to table SS_DOGODEK, that will
		*    remind the user in ODP_OPOM_DNI to check if the client has done what he needed to.
		*   ss.dogodek.ID_TIP_DOG is populated with 'SG' which means SystemGeneratedEvent.
		* All three possibilities are processed over xml
		
		IF GOBJ_Permissions.GetPermission("SpecialServicesContractCancellationCancelCancellat") < 2 THEN
			pozor(STRTRAN(PERMISSION_DENIED, "{0}", "SpecialServicesContractCancellationCancelCancellat"))
			RETURN .F.
		ENDIF
		
		LOCAL lcId_kupca, lcNewStatus, lcConfirmStatusChange, lcXML, lnOdp_opom_dni, ;
		      lcOpis_dog, lcToDo, lcKont, lcTel, lcGSM, lcUser, ldDatum, ldRok, lnPosition, ;
		      lnCount, lcCaption, lcCaption1, lcCaption2, llChangeStatus, lcCursor, lcType, ldDatDog
		
		lcCursor = thisform.cursorname_detail
		
		IF !USED(lcCursor)
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF  
		
		IF RECCOUNT("odpoved") = 0 THEN
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		Thisform.id_field = odpoved.id_odpoved
		
		IF odpoved.preklicana THEN
			pozor("Odpoved je že bila preklicana!")
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		IF !odpoved.izdana THEN
			pozor("Odpoved še ni bila izdana. Preklic odpovedi ni možen!")
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		lcCaption = "Označim to odpoved kot preklicano" && Caption
		lcCaption = lcCaption + SPACE(1) + "(" + ALLTRIM(STR(odpoved.id_odpoved)) + ")?"
		IF !potrjeno(lcCaption) THEN
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF 
		REPLACE odpoved.preklicana WITH .T. IN odpoved
		
		* 2. Update field pogodba.status (if conditions are met)
		llChangeStatus = .F.
		GF_SQLEXEC("SELECT status, naziv FROM dbo.statusi WHERE sif_status = 'BPS'", '_statusi') 
		IF RECCOUNT("_statusi") = 0 THEN
			IF !potrjeno("V tabeli statusov ni statusa za pogodbo brez posebnosti. Vseeno nadaljujem?")
				Thisform.bgridResult.SetFocus
				RETURN .F.
			ENDIF 
		ELSE && Required status exists
			lcNewStatus = _statusi.status + " - " + ALLTRIM(_statusi.naziv)
			lcCaption = "Naj se status pogodbe spremeni na:"   && Caption
			lcConfirmStatusChange = lcCaption + gcE + lcNewStatus
			IF potrjeno(lcConfirmStatusChange) THEN
				llChangeStatus = .T.  
			ENDIF
		ENDIF
		
		SELECT odpoved
		
		lcTekst = "Odpoved pogodbe" &&caption
		tcDateName = "Dat. preklica" &&caption
		ldDate = DATE()
		IF llChangeStatus = .T.  then 
			DO FORM changedate_rpg WITH ldDate, lcTekst, "UPD", "", tcDateName, .T. TO loValues
			IF TYPE("loValues") # "O" 
				RETURN .F.
			ENDIF
		ENDIF 
			
		lnOdp_opom_dni = GObj_Settings.GetVal("odp_opom_dni")
		lcOpis_dog = "Odpoved pogodbe je bila preklicana. Pogodba je obnovljena." && caption
		lcToDo = "Preveri, če je stranka opravila svoje obveznosti." && caption
		lcUser = GObj_Comm.GetUserName()
		ldDatum = DATETIME()
		ldRok = DATETIME(YEAR(DATE() + lnOdp_opom_dni), MONTH(DATE() + lnOdp_opom_dni), DAY(DATE() + lnOdp_opom_dni), HOUR(ldDatum), MINUTE(ldDatum))
		ldDatDog = IIF(llChangeStatus, loValues.datum, ldDate)
		
		* 1. Update field odpoved.izdana
		lcXml = "<issue_cancellation_insert xmlns='urn:gmi:nova:leasing'>" + gcE
		lcXml = lcXml + GF_CreateNode("datum_izdaje_fakture", odpoved.dat_izd_odp, "D", 1) + gcE
		IF llChangeStatus = .T.  then 
			lcXml = lcXml + GF_CreateNode("rpg_categ", loValues.rpg_cat, "C", 1) + gcE
			lcXml = lcXml + GF_CreateNode("opis", loValues.opis, "C", 1) + gcE
		ENDIF 
		
		* 3. Insert a record to table SS_DOGODEK (lnOdp_opom_dni > 0)
		lcType = "Cancel"
		lcXml =  thisform.generate_xml(ldDatum, lcUser, ldRok, lcOpis_dog, lcToDo, llChangeStatus, lnOdp_opom_dni, lcXml, lcType, ldDatDog)
		
		lcXml = lcXml + "</issue_cancellation_insert>"
		
		IF !GF_ProcessXml(lcXml, .T.) THEN
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		obvesti("Odpoved je bila uspešno preklicana!")
		
		Thisform.RunSql()
	ENDPROC

	PROCEDURE tbractions.cmdIssueCancellation.Click
		* 1. Mark this record as ContractCancelled (odpoved.izdana = 1)
		* 2. Ask the user if the contract status field (pogodba.status) also needs
		*    to be changed. It is changed to [select status from dbo.statusi where sif_status = 'ODP']
		* 3. If LOC_NAST.ODP_OPOM_DNI > 0 => insert a reminder to table SS_DOGODEK, that will
		*    remind the user in ODP_OPOM_DNI to check if the client has done what he needed to.
		* 	 ss.dogodek.ID_TIP_DOG is populated with 'SG' which means SystemGeneratedEvent.
		* All three possibilities are processed over xml
		
		IF GOBJ_Permissions.GetPermission("SpecialServicesContractCancellationIssueCancelatio") < 2 THEN
			pozor(STRTRAN(PERMISSION_DENIED, "{0}", "SpecialServicesContractCancellationIssueCancelatio"))
			RETURN .F.
		ENDIF
		
		LOCAL lcNewStatus, lcConfirmStatusChange, lcXML, lnOdp_opom_dni, ;
		      lcOpis_dog, lcToDo, lcUser, ldDatum, ldRok, lnPosition, lnRecCount, ;
		      lnCount, lcCaption, lcCaption1, lcCaption2, llChangeStatus, lnCountIssue, ;
		      lcNotIssued, lcNotIssuedMore, lcType, lcText1, lcText2, ldDatDog
		
		
		IF !USED("odpoved") THEN 
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF 
		
		IF RECCOUNT("odpoved") = 0 THEN
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		Thisform.id_field  = odpoved.id_odpoved
		SELECT odpoved
		
		lnPosition = RECNO("odpoved")
		lnRecCount = RECCOUNT("odpoved")
		IF lnPosition > lnRecCount THEN
			lnPosition = lnRecCount 
		ENDIF	
		
		COUNT FOR oznacen = .T. TO lnCount
		IF lnCount = 1 THEN
			LOCATE FOR oznacen = .T.
			Thisform.id_field  = odpoved.id_odpoved
		ENDIF	
		IF thisform.calc_debt THEN
			LOCATE FOR oznacen = .T.
			lnPosition = RECNO("odpoved")
		ENDIF
		
		GO lnPosition IN odpoved
		
		IF odpoved.izdana AND lnCount = 0 THEN
			pozor("Odpoved je že bila izdana!")
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		IF INLIST(lnCount, 0, 1)  THEN
			GO lnPosition IN odpoved
			REPLACE odpoved.oznacen WITH .T. IN odpoved
			lcCaption = "Označim to odpoved kot izdano" && Caption
			lcCaption = lcCaption + SPACE(1) + "(" + ALLTRIM(STR(Thisform.id_field)) + ")?"
		ELSE
			lcCaption = "Ali želite izdati označene odpovedi?" && Caption
		ENDIF
		
		IF !potrjeno(lcCaption) THEN
			REPLACE odpoved.oznacen WITH .F. IN odpoved
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF 
		
		* 2. Update field pogodba.status (if conditions are met) ----------------------
		llChangeStatus = .F.
		GF_SQLEXEC("SELECT status, naziv FROM dbo.statusi WHERE sif_status = 'ODP'", "_statusi") 
		IF RECCOUNT("_statusi") = 0 && There is no status for cancelled contract in table STATUSI 
			IF !potrjeno("V tabeli statusov ni statusa za odpovedano pogodbo. Vseeno nadaljujem?")
				Thisform.bgridResult.SetFocus
				RETURN .F. 
			ENDIF
		ELSE && Required status exists
			lcNewStatus = _statusi.status + " - " + ALLTRIM(_statusi.naziv)
			lcCaption1 = "Naj se status pogodbe spremeni na:" && caption
			lcCaption2 = "Naj se status pogodb spremeni na:" && caption
			lcConfirmStatusChange = IIF(lnCount > 1, lcCaption2, lcCaption1) + gcE + lcNewStatus
			IF potrjeno(lcConfirmStatusChange) THEN
				llChangeStatus = .T.		
			ENDIF 
		ENDIF
		
		SELECT odpoved
		
		lnOdp_opom_dni = GObj_Settings.GetVal("odp_opom_dni")
		lcOpis_dog = "Izdana je bila odpoved pogodbe." && Caption
		lcToDo = "Preveri, če je stranka opravila svoje obveznosti." && Caption
		lcUser = GObj_Comm.GetUserName()
		ldDatum = DATETIME()
		ldRok = DATETIME(YEAR(DATE() + lnOdp_opom_dni), MONTH(DATE() + lnOdp_opom_dni), DAY(DATE() + lnOdp_opom_dni), HOUR(ldDatum), MINUTE(ldDatum))
		
		* 1. Update field odpoved.izdana
		lcXml = "<issue_cancellation_insert xmlns='urn:gmi:nova:leasing'>" + gcE
		
		lcTekst = "Odpoved pogodbe" &&caption
		tcDateName = "Dat. odpovedi" &&caption
		ldDate = DATE()
		IF llChangeStatus = .T. THEN
			DO FORM changedate_rpg WITH ldDate, lcTekst, "UPD", "", tcDateName, .T. TO loValues
			IF TYPE("loValues") # "O"
				RETURN .F.
			ENDIF 
		ELSE 
			lcCaption = "Vnesite datum izdaje odpovedi." && caption
			ldDate = GF_GET_DATE(lcCaption, ldDate)
			IF ISNULL(ldDate) OR EMPTY(ldDate)
				lcText = "Datum ne sme biti prazen." &&caption
				pozor(lcText)
				RETURN .F.
			ENDIF
			IF !GF_ValidDDVDate(ldDate, .F.) AND ldDate <> { . . } 
				POZOR("Datum je izven dovoljenega obdobja!")
				RETURN .F.
			ENDIF
		ENDIF 
		
		SELECT odpoved
		IF !thisform.calc_debt THEN
			lnCountIssue = 0
			SCAN FOR odpoved.oznacen = .T. and !GF_NULLOREMPTY(odpoved.dat_dolg_na_dan) AND IIF(llChangeStatus,loValues.datum, ldDate) >= odpoved.dat_dolg_na_dan 
				lnCountIssue = lnCountIssue + 1
			ENDSCAN
			IF lnCountIssue == 0 THEN 
				lcText1 = "Izbranih odpovedi se ne more izdati!" &&caption
				lcText2 = "Izračunajte dolg in bodite pozorni na to, da je datum izračuna dolga manjši ali enak datumu izdaje odpovedi!" &&caption
				obvesti(lcText1 + gcE + lcText2)
				RETURN .F.												
			ENDIF
		ELSE	
			IF (IIF(llChangeStatus, loValues.datum, ldDate) < thisform.datum_dolg_na_dan)
				POZOR("Datum ne more biti manjši od datuma izračuna dolga na dan!")	
				RETURN .F.
			ENDIF
		ENDIF  
		
		
		ldDatDog = IIF(llChangeStatus, loValues.datum, ldDate)
		lcXml = lcXml + GF_CreateNode("datum_izdaje_fakture", ldDatDog, "D", 1) + gcE
		
		IF llChangeStatus = .T. THEN 
			lcXml = lcXml + GF_CreateNode("rpg_categ", loValues.rpg_cat, "C", 1) + gcE
			lcXml = lcXml + GF_CreateNode("opis", loValues.opis, "C", 1) + gcE
		ENDIF 
		
		SELECT odpoved
		lcType = "Issue"
		IF !thisform.calc_debt THEN
			SCAN FOR odpoved.oznacen = .T. AND !GF_NULLOREMPTY(odpoved.dat_dolg_na_dan) AND ldDate >= odpoved.dat_dolg_na_dan
				* 3. Insert a record to table SS_DOGODEK (lnOdp_opom_dni > 0)
				lcXml =  thisform.generate_xml(ldDatum, lcUser, ldRok, lcOpis_dog, lcToDo, llChangeStatus, lnOdp_opom_dni, lcXml, lcType, ldDatDog)
			ENDSCAN
		ELSE 	
			SCAN FOR odpoved.oznacen = .T. AND IIF(llChangeStatus, loValues.datum, ldDate) >= thisform.datum_dolg_na_dan
				* 3. Insert a record to table SS_DOGODEK (lnOdp_opom_dni > 0)
				lcXml =  thisform.generate_xml(ldDatum, lcUser, ldRok, lcOpis_dog, lcToDo, llChangeStatus, lnOdp_opom_dni, lcXml, lcType, ldDatDog)
			ENDSCAN
		ENDIF	
		
		lcXml = lcXml + "</issue_cancellation_insert>"
		
		IF !GF_ProcessXml(lcXml, .T.) THEN
			Thisform.bgridResult.SetFocus
			RETURN .F.
		ENDIF
		
		IF !thisform.calc_debt THEN
			lcNotIssuedMore = ""
			IF lnCount = 0 THEN
				obvesti("Odpoved je bila uspešno izdana!")
			ELSE
				IF  lnCount > lnCountIssue THEN 
					SCAN FOR odpoved.oznacen = .T. AND (GF_NULLOREMPTY(odpoved.dat_dolg_na_dan) OR IIF(llChangeStatus, loValues.datum, ldDate) < odpoved.dat_dolg_na_dan) 
			 			lcNotIssued = TRANSFORM(odpoved.id_odpoved)
			 			IF lnCount - lnCountIssue > 1 THEN  			
			 				lcNotIssuedMore = ALLTRIM(lcNotIssuedMore) + "','" + ALLTRIM(TRANSFORM(odpoved.id_odpoved))
			 			ENDIF 	
					ENDSCAN
				
					IF lnCount - lnCountIssue > 1 THEN 
			 			lcNotIssued = STRTRAN(STRTRAN(lcNotIssuedMore , ',','', 1,1),"'", '')
					ENDIF 
					obvesti("Odpovedi s št. odpovedi: " + lcNotIssued  + " niso izdane. Razlog je lahko neizračunan dolg ali datum izračuna dolga, večji od datuma izdaje odpovedi!" + gcE + "Odpovedi, ki izpolnjujejo pogoje, so bile uspešno izdane.")
				ELSE 
					obvesti("Odpovedi so bile uspešno izdane!")	
				ENDIF
			ENDIF
		ELSE		
			IF INLIST(lnCount, 0, 1)  THEN
				obvesti("Odpoved je bila uspešno izdana!")
			ELSE 	
				obvesti("Odpovedi so bile uspešno izdane!")	
			ENDIF	
		ENDIF
		
		IF thisform.calc_debt = .F. THEN 
			Thisform.runsql()
		ENDIF
		
		thisform.calc_debt = .F.
		
		
		
	ENDPROC

ENDDEFINE
