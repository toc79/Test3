*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="kategorije_entiteta_maska.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\includes\locs.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	Name = "Dataenvironment"

ENDDEFINE

DEFINE CLASS frmkategorije_entiteta_maska AS gform OF "..\classes\gkclass.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="tlbSifr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtEntiteta" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtId_entitete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtOpis" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addingfields
		*m: spremenjen_podatek
		*p: obvezno_shranjevanje		&& V primeru da na maski obstaja polje, ki je obvezno, ni mogoèe zapustiti formo z gumbom Izhod, èe to polje ni shranjeno v bazi.
	*</DefinedPropArrayMethod>

	Caption = "Poljubne kategorije"
	DoCreate = .T.
	Height = 200
	Left = 0
	Name = "frmKategorije_entiteta_maska"
	tip_vnosne_maske = 1
	Top = 0
	Width = 600
	tmrClick.Name = "tmrClick"

	ADD OBJECT 'Line1' AS line WITH ;
		Height = 0, ;
		Left = 5, ;
		Name = "Line1", ;
		Top = 42, ;
		Width = 590
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'tlbSifr' AS toolbar_sifr WITH ;
		align_right = .T., ;
		Left = 510, ;
		Name = "tlbSifr", ;
		TabIndex = 1, ;
		Top = 5, ;
		btnExit.Left = 30, ;
		btnExit.Name = "btnExit", ;
		btnExit.Top = 5, ;
		btnSave.Left = 5, ;
		btnSave.Name = "btnSave", ;
		btnSave.Top = 5, ;
		btnToolTip.Left = 55, ;
		btnToolTip.Name = "btnToolTip", ;
		btnToolTip.Top = 5
		*< END OBJECT: ClassLib="..\classes\vclas1.vcx" BaseClass="commandgroup" />

	ADD OBJECT 'txtEntiteta' AS btextro WITH ;
		Height = 19, ;
		Left = 10, ;
		Name = "txtEntiteta", ;
		TabIndex = 2, ;
		Top = 10, ;
		Width = 115
		*< END OBJECT: ClassLib="..\classes\vclas1.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtId_entitete' AS btextro WITH ;
		Height = 19, ;
		Left = 130, ;
		Name = "txtId_entitete", ;
		TabIndex = 3, ;
		Top = 10, ;
		Width = 115
		*< END OBJECT: ClassLib="..\classes\vclas1.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtOpis' AS btextro WITH ;
		Height = 19, ;
		Left = 245, ;
		Name = "txtOpis", ;
		TabIndex = 4, ;
		Top = 10, ;
		Width = 250
		*< END OBJECT: ClassLib="..\classes\vclas1.vcx" BaseClass="textbox" />
	
	PROCEDURE addingfields
		********************************************************************
		* nastavitev forme
		* stevilo textbox-ov brez nastavitve maske, ker se steje za 2 vrstici
		* glede na stevilo vrstic se poveca forma
		LOCAL lnTextBoxes, lnReccount, lnAllRows, lnHeight, lnMaxRows 
		SELECT kategorije 
		
		COUNT FOR ALLTRIM(UPPER(kategorije.tip_polja)) == "TEXT" AND kategorije.prosti_vnos TO lnTextBoxes
		COUNT TO lnReccount
		lnAllRows = lnTextBoxes + lnReccount
		lnHeight = (lnAllRows * 20) + 50
		* ce je veliko polj, se forma razsiri
		IF lnHeight > 800 THEN  
			Thisform.Width = 850
			Thisform.tlbSifr.Left = 750
			Thisform.Line1.Width = 840
			* se enkrat izracunamo visino
			lnHeight = (lnAllRows * 10) + 50
			lnMaxRows = lnAllRows / 2
		ELSE 
			Thisform.Height = lnHeight
			lnMaxRows = lnAllRows
		ENDIF 
		
		********************************************************************
		* dodajamo polja
		LOCAL lnCnt, lcCnt, lnStartLeft, lnLeft, lnTop, lnWidth, lnHeight, loObj, lcSql, laPar[2], lcCursor
		
		lnCnt = 0
		lnCntTop = 0
		lnStartLeft = 0
		
		GO TOP IN kategorije
		SCAN 
			lcCnt = ALLTRIM(STR(lnCnt))
			
			** Label
			This.AddObject("Label" + lcCnt, "Blabel")
			lnLeft = 5 + lnStartLeft
			lnTop = (20 * lnCntTop) + 52
			lnWidth = 150
			lnHeight = 17
			loObj = This.Label&lcCnt
			loObj.Alignment = 1
			loObj.AutoSize = .F.
			loObj.BackColor = ThisForm.BackColor
			loObj.Caption = ALLTRIM(kategorije.naziv)
			loObj.Move(lnLeft, lnTop, lnWidth, lnHeight)
			loObj.Visible = .T.
		
			DO CASE 
				CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "TEXT" AND kategorije.prosti_vnos
					This.AddObject("EditBox" + lcCnt, "Beditbox")
					lnTop = (20 * lnCntTop) + 50
					lnLeft = 160 + lnStartLeft
					lnHeight = 39
					lnWidth = 250
					loObj = This.EditBox&lcCnt
					loObj.Value = ALLTRIM(kategorije.val_string)
					loObj.MaxLength = 4000
					loObj.Obvezen = kategorije.obvezen
					
					* poveèamo število, ker editbox je v dveh vrsticah
					lnCnt = lnCnt + 1
					lnCntTop = lnCntTop + 1
				
				CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "TEXT" AND !kategorije.prosti_vnos
					This.AddObject("Textbox" + lcCnt, "Btext")
					lnTop = (20 * lnCntTop) + 50
					lnLeft = 160 + lnStartLeft
					lnHeight = 19
					lnWidth = 250
					loObj = This.Textbox&lcCnt
					loObj.Value = ALLTRIM(kategorije.val_string)
					loObj.InputMask = NVL(kategorije.maska, "")
					loObj.MaxLength = 200
					loObj.Obvezen = kategorije.obvezen
				
				CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "DATETIME"
					This.AddObject("Textbox" + lcCnt, "Datum")
					lnTop = (20 * lnCntTop) + 50
					lnLeft = 160 + lnStartLeft
					lnHeight = 19
					lnWidth = 80
					loObj = This.Textbox&lcCnt
					loObj.DateFormat = 6
					loObj.Format = "D"
					loObj.Value = NVL(kategorije.val_datetime, {})
					loObj.Obvezen = kategorije.obvezen
		
				CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "NUMBER"
					This.AddObject("Textbox" + lcCnt, "Btext")
					lnTop = (20 * lnCntTop) + 50
					lnLeft = 160 + lnStartLeft
					lnHeight = 19
					lnWidth = 250
					loObj = This.Textbox&lcCnt
					loObj.Value = NVL(kategorije.val_decimal, 0)
					loObj.InputMask = IIF(GF_NullOrEmpty(kategorije.maska), "#", ALLTRIM(kategorije.maska))
					loObj.Obvezen = kategorije.obvezen
					loObj.Obvezen_nic = kategorije.prosti_vnos
					
				CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "COMBOBOX"
					This.AddObject("Combobox" + lcCnt, "Bcombolist")
					lnTop = (20 * lnCntTop) + 50
					lnLeft = 160 + lnStartLeft
					lnHeight = 19
					lnWidth = 250
					loObj = This.Combobox&lcCnt
					loObj.Obvezen = kategorije.obvezen
					loObj.RowSourceType = 2
					TEXT TO lcSql NOSHOW 
						select cast(null as int) as id_kategorije_sifrant, cast('' as varchar(200)) as vrednost
						union
						select id_kategorije_sifrant, vrednost
						from dbo.kategorije_sifrant
						where 
							id_kategorije_tip = ?p1
						    and (neaktiven = 0 or id_kategorije_sifrant = ?p2)
					ENDTEXT 
					laPar[1] = kategorije.id_kategorije_tip 
					laPar[2] = IIF(GF_NullOrEmpty(kategorije.id_kategorije_sifrant), 0, kategorije.id_kategorije_sifrant)
					lcCursor = "combo" + lcCnt
					GF_SqlExec_P(lcSql, @laPar, lcCursor)
					loObj.RowSource = lcCursor + ".vrednost, id_kategorije_sifrant"
					loObj.BoundColumn = 2
					loObj.ColumnCount = 2
					loObj.ColumnLines = .F.
					loObj.ColumnWidths = "240,0"
					loObj.Value = kategorije.id_kategorije_sifrant
					
			ENDCASE 
			
			loObj.Move(lnLeft, lnTop, lnWidth, lnHeight)
			loObj.Visible = .T.
			loObj.label_name = "Label" + lcCnt
			** postavimo fokus na prvo polje
			IF lnCnt = 0 THEN 
				loObj.SetFocus()
			ENDIF 
		
			lnCnt = lnCnt + 1
			lnCntTop = lnCntTop + 1
			** postavimo se v naslednji stolpec, èe se še nismo
			IF lnCnt >= lnMaxRows AND lnCntTop = lnCnt THEN 
				lnStartLeft = 430
				lnCntTop = 0
			ENDIF 
			** dodamo ime objekta v cursor, zaradi shranjevanja
			REPLACE obj_name WITH loObj.Name IN kategorije
		ENDSCAN 
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tcEntiteta, tcId_entitete, tnTip, tcId_entiteteOpis
		
		IF PCOUNT() < 2 THEN
			GF_NAPAKA(0, "Form Kategorije_entiteta_maska", "", LOWPARAMETERS_LOC, 0)
			RETURN .F.
		ENDIF
		
		IF PCOUNT() < 3 THEN 
			tnTip = 1
		ENDIF 
		Thisform.tip_vnosne_maske = tnTip
		
		* preveri in nastavi permission-e
		IF Thisform.tip_vnosne_maske <> 0 AND !Thisform.set_permissions(tcEntiteta, tcId_entitete) THEN
			** ce ni pravice za popravo zapisa, se forma odpre vendar kot readonly
			Thisform.Tip_vnosne_maske = 0
		ENDIF
		
		LOCAL lcSql, laPar[2], lcTekst, lcOpis 
		
		TEXT TO lcSql NOSHOW 
			select 
			    a.id_kategorije_tip, a.entiteta, a.sifra, a.naziv, a.tip_polja, a.maska, a.prosti_vnos, a.obvezen, a.neaktiven, 
			    b.id_kategorije_entiteta, b.id_entiteta, b.id_kategorije_sifrant, b.val_string, b.val_decimal, b.val_datetime, 
			    cast('' as varchar(50)) as obj_name
			from 
			    dbo.kategorije_tip a
			    left join dbo.kategorije_entiteta b on a.id_kategorije_tip = b.id_kategorije_tip and b.id_entiteta = ?p2
			where a.entiteta = ?p1 and a.neaktiven = 0
			order by a.id_kategorije_tip
		ENDTEXT 
		
		laPar[1] = tcEntiteta
		laPar[2] = tcId_entitete
		
		GF_SqlExec_P(lcSql, @laPar, "kategorije")
		
		SELECT kategorije
		REPLACE ALL id_entiteta WITH tcId_entitete
		LOCATE 
		
		IF RECCOUNT("kategorije") = 0 THEN 
			lcTekst = "Ne obstajajo kategorije za entiteto {0}" && caption
			lcTekst = STRTRAN(lcTekst, "{0}", tcEntiteta)
			pozor(lcTekst)
			RETURN .F.
		ENDIF 
		
		Thisform.Set_controls()
		Thisform.AddingFields()
		
		Thisform.txtEntiteta.Value = tcEntiteta
		Thisform.txtId_entitete.Value = tcId_entitete
		IF GF_NullOrEmpty(tcId_entiteteOpis) THEN 
			lcSql = "select dbo.gfn_kategorije_entitete_naziv(?p1, ?p2) as naziv"
			GF_SqlExec_P(lcSql, @laPar, "kategorije_naziv")
			lcOpis = ALLTRIM(kategorije_naziv.naziv)
			USE IN kategorije_naziv
		ELSE
			lcOpis = tcId_entiteteOpis
		ENDIF 
		Thisform.txtOpis.Value = lcOpis
		
		IF !GF_EXT_FUNC("KATEGORIJE_ENTITETA_MASKA_INIT") THEN 
			RETURN .F.
		ENDIF 
		
		Thisform.tlbSifr.btnSave.Enabled = (Thisform.tip_vnosne_maske <> 0)
		Thisform.Set_controls()
		** Tudi ce gre za pregled, je forma modalna
		Thisform.WindowType = 1
		
	ENDPROC

	PROCEDURE Release
		IF Thisform.Tip_vnosne_maske <> 0 AND Thisform.obvezno_shranjevanje = .T. THEN 
			LOCAL lnCnt, lcTekst
			SELECT kategorije
			COUNT FOR obvezen = .T. and ; 
				((tip_polja = "COMBOBOX" AND GF_NullOrEmpty(id_kategorije_sifrant)) ;
					or (tip_polja = "DATETIME" AND GF_NullOrEmpty(val_datetime)) ;
					or (tip_polja = "NUMBER" AND ISNULL(val_decimal) AND prosti_vnos = .F.) ;
					or (tip_polja = "TEXT" AND GF_NullOrEmpty(val_string)) ;
				) TO lnCnt
			IF lnCnt > 0 THEN 
				lcTekst = "Zapis je potrebno shraniti, saj obstajajo polja, ki so obvezna, vendar zapis še ni shranjen." && caption
				pozor(lcTekst)
				NODEFAULT 
			ENDIF 
		ENDIF 
		
	ENDPROC

	PROCEDURE set_permissions
		LPARAMETERS tcEntiteta, tcId_entitete
		LOCAL llVrni, lcPermission, lcSql, laPar[1], lcStatus
		
		lcPermission = "undefined"
		
		DO CASE 
			CASE tcEntiteta = "PARTNER" 
				lcPermission = "partnerUpdate"
		
			CASE tcEntiteta = "POGODBA" 
				lcSql = "select status_akt from dbo.pogodba where id_cont = ?p1"
				laPar[1] = tcId_entitete
				GF_SqlExec_P(lcSql, @laPar, "pogodba")
				lcStatus = ALLTRIM(pogodba.status_akt)
				USE IN pogodba
				DO CASE 
					CASE lcStatus = "A"
						lcPermission = "ActiveContractUpdate" && aktivna
					CASE lcStatus = "D"
						lcPermission = "PartiallyActiveContractUpdate" && delno aktivna
					CASE lcStatus = "N"
						lcPermission = "ContractUpdate" && neaktivna
					OTHERWISE 
						lcPermission = "ContractDashboard" && zakljuèena samo pregled
						Thisform.tip_vnosne_maske = 0
				ENDCASE 
		
			CASE tcEntiteta = "DOKUMENT" 
				TEXT TO lcSql NOSHOW 
					select case 
					          when id_cont is not null or id_pon is not null or id_odobrit is not null then 'POGDOK' 
					          else 'KROVDOK' end as tip_dok
					from dbo.dokument
					where id_dokum = ?p1
				ENDTEXT 
				laPar[1] = tcId_entitete
				GF_SqlExec_P(lcSql, @laPar, "dokument")
				lcStatus = ALLTRIM(dokument.tip_dok)
				USE IN dokument
				IF lcStatus = "POGDOK" THEN 
					lcPermission = "ContractDocumentationUpdate"
				ELSE
					lcPermission = "CollectionDocumentationUpdate"
				ENDIF 
		
			CASE tcEntiteta = "P_EVAL" 
				lcSql = "select eval_type from dbo.p_eval where id_p_eval = ?p1"
				laPar[1] = tcId_entitete
				GF_SqlExec_P(lcSql, @laPar, "p_eval")
				lcStatus = ALLTRIM(p_eval.eval_type)
				USE IN p_eval
				IF lcStatus = "E" THEN 
					lcPermission = "PartnerEvalUpdate_E"
				ELSE 
					lcPermission = "PartnerEvalUpdate_Other"
				ENDIF 
				
		ENDCASE 
		
		IF tcEntiteta = "DOKUMENT" THEN 
			llVrni = GOBJ_Permissions.GetPermissionEx(lcPermission, "DocTypes", tcId_entitete) = 2
		ELSE 
			llVrni = GOBJ_Permissions.GetPermission(lcPermission) = 2
		ENDIF 
		
		IF !llVrni THEN 
			pozor(STRTRAN(PERMISSION_DENIED, "{0}", lcPermission))
		ENDIF
		RETURN llVrni 
	ENDPROC

	PROCEDURE shrani
		LOCAL lcText, lcXml, lcS, loObjVal
		lcS = SPACE(4)
		
		IF Thisform.preveri_podatke(Thisform) 
		 	lcText = INFSAVED_LOC
			
			lcXml = "<kategorije_entiteta_insert_update xmlns='urn:gmi:nova:core_bl'>" + gcE
			SELECT kategorije
			SCAN 
				lcXml = lcXml + "<kategorija_entiteta>" + gcE
				IF !GF_NullOrEmpty(kategorije.id_kategorije_entiteta) THEN
					lcXml = lcXml + lcS + GF_CreateNode("id_kategorije_entiteta", kategorije.id_kategorije_entiteta, "I", 1) + gcE
				ENDIF 
				lcXml = lcXml + lcS + GF_CreateNode("id_kategorije_tip", kategorije.id_kategorije_tip, "I", 1) + gcE
				lcXml = lcXml + lcS + GF_CreateNode("id_entiteta", kategorije.id_entiteta, "C", 1) + gcE
				
				loObjVal = "Thisform." + ALLTRIM(kategorije.obj_name) + ".Value"
				DO CASE 
					CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "TEXT"
						IF !GF_NullOrEmpty(&loObjVal) THEN 
							lcXml = lcXml + lcS + GF_CreateNode("val_string", &loObjVal, "C", 1) + gcE
						ENDIF 
		
					CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "DATETIME"
						IF !GF_NullOrEmpty(&loObjVal) THEN 
							lcXml = lcXml + lcS + GF_CreateNode("val_datetime", &loObjVal, "D", 1) + gcE
						ENDIF 
		
					CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "NUMBER"
						IF !GF_NullOrEmpty(&loObjVal) OR kategorije.prosti_vnos THEN 
							lcXml = lcXml + lcS + GF_CreateNode("val_decimal", &loObjVal, "N", 1) + gcE
						ENDIF 
					
					CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "COMBOBOX"
						IF !GF_NullOrEmpty(&loObjVal) THEN 
							lcXml = lcXml + lcS + GF_CreateNode("id_kategorije_sifrant", &loObjVal, "I", 1) + gcE
						ENDIF 
				ENDCASE 
				
				lcXml = lcXml + "</kategorija_entiteta>" + gcE
			ENDSCAN
			lcXml = lcXml + "</kategorije_entiteta_insert_update>" + gcE
		
			IF !GF_ProcessXml(lcXml) THEN
				RETURN .F.
			ENDIF
			
			obvesti(lcText)
			
			** nastavimo, da se lahko zapusti formo
			Thisform.Tip_vnosne_maske = 0
			
			Thisform.Release 
		ELSE
			RETURN .F.
		ENDIF
	ENDPROC

	PROCEDURE spremenjen_podatek
		LOCAL llVrni
		
		* Preverimo ali je sprememba
		IF llVrni = .F. THEN 
			Thisform.LockScreen = .T.
			
			SELECT kategorije
			SCAN 
				loObjVal = "Thisform." + ALLTRIM(kategorije.obj_name) + ".Value"
				DO CASE 
					CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "TEXT"
						IF !(ALLTRIM(NVL(&loObjVal, "")) == ALLTRIM(NVL(kategorije.val_string, "")))
							llVrni = .T.
						ENDIF 
		
					CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "DATETIME"
						IF !(NVL(&loObjVal, {..}) == NVL(kategorije.val_datetime, {..}))
							llVrni = .T.
						ENDIF 
					CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "NUMBER"
						IF !(NVL(&loObjVal, 0) = NVL(kategorije.val_decimal, 0))
							llVrni = .T.
						ENDIF 
					
					CASE ALLTRIM(UPPER(kategorije.tip_polja)) == "COMBOBOX"
						IF !(NVL(&loObjVal, 0) = NVL(kategorije.id_kategorije_sifrant, 0))
							llVrni = .T.
						ENDIF 
				ENDCASE 
				IF llVrni THEN 
					EXIT 
				ENDIF 
			ENDSCAN 
			LOCATE 
			
			Thisform.LockScreen = .F.
		ENDIF
		
		RETURN llVrni
	ENDPROC

	PROCEDURE tlbSifr.btnExit.Click
		WITH Thisform
			IF .tip_vnosne_maske <> 0 AND .Spremenjen_podatek() AND Potrjeno(SAVECHANGES_LOC, .T.) THEN
				IF .shrani()
					DODEFAULT()
				ENDIF
			ELSE 
				DODEFAULT()
			ENDIF
		ENDWITH
	ENDPROC

ENDDEFINE
